### 1、 四种修饰符的限制范围

### 2、  java的object方法有哪些
- getClass
```Java
public final native Class<?> getClass();
```
- hashCode
```
public native int hashCode();
```
- equals
```
public boolean equals(Object obj) {
    return (this == obj);
}
```
- clone
```java
protected native Object clone() throws CloneNotSupportedException;
```
- toString
```java
public String toString() {
    return getClass().getName() + "@" + Integer.toHexString(hashCode());
}
```
- notify
```java
public final native void notify();
```
- notifyAll
```java
public final native void notifyAll();
```
- wait 有三个重载方法
```java
public final native void wait(long timeout) throws InterruptedException;

public final void wait() throws InterruptedException {
    wait(0);
}

public final void wait(long timeout, int nanos) throws InterruptedException {
    if (timeout < 0) {
        throw new IllegalArgumentException("timeout value is negative");
    }

    if (nanos < 0 || nanos > 999999) {
        throw new IllegalArgumentException(
                            "nanosecond timeout value out of range");
    }

    if (nanos > 0) {
        timeout++;
    }

    wait(timeout);
}
```

- finalize
```java
protected void finalize() throws Throwable { }
```


### 3、 列表中学生按照年龄排序
   - 重写compareTo

### 4、 哪些场景下，子类需要重写 equals 方法和 hashCode 方法？
   
### 5、 Java 异常，什么是 checked Exception 和 unchecked Exception，举几个具体的例子；是否研究过 Spring Boot 中的异常；
   https://www.cnblogs.com/tjudzj/p/7053980.html
- checked exception：编译器要求对其进行显示的捕获或抛出   
例如，IOException，SQLException；
  
- unchecked exception：一般发生在运行期，编译器不要求对其进行显示的捕获或抛出   
例如NullPointerException，ClassCastException；

Checked异常继承java.lang.Exception类。Unchecked异常继承自java.lang.RuntimeException类。

  
### 6、 传值和传引用的区别，Java是怎么样的，有没有传值引用

### - 动态代理的两种方式，以及区别。
### - Java序列化的方式
